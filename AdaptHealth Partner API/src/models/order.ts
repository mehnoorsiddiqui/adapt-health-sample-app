/**
 * AdaptHealth Partner APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, expandoObject, lazy, Schema, string } from '../schema';
import { Address, addressSchema } from './address';
import { ContactPoint, contactPointSchema } from './contactPoint';
import { Identifier, identifierSchema } from './identifier';
import { Practicioner, practicionerSchema } from './practicioner';
import { Reference, referenceSchema } from './reference';
import { Service, serviceSchema } from './service';
import { StatusEnum, statusEnumSchema } from './statusEnum';

/** AdaptHealth Order Type */
export interface Order {
  /** Unique identifiers for the order record */
  identifier: Identifier[];
  /** Order status in the destination system */
  status: StatusEnum;
  /** Date the order needs to be delivered */
  neededTime: string;
  /** Contact must be of type "phone" */
  telecom: ContactPoint[];
  /** Delivery address */
  address: Address;
  /** Must reference an object of type "patient", even for a non-patient entity */
  subject: Reference;
  /** The type of service/item being provided and the quantity */
  services: Service[];
  /** Prescribing doctor for the order */
  requester: Practicioner;
  /** ICD-10 Diagnosis Codes */
  diagnoses: string[];
  /** Free-form text field for order notes */
  note: string;
  [key: string]: unknown;
}

export const orderSchema: Schema<Order> = expandoObject({
  identifier: ['identifier', array(lazy(() => identifierSchema))],
  status: ['status', statusEnumSchema],
  neededTime: ['neededTime', string()],
  telecom: ['telecom', array(lazy(() => contactPointSchema))],
  address: ['address', lazy(() => addressSchema)],
  subject: ['subject', lazy(() => referenceSchema)],
  services: ['services', array(lazy(() => serviceSchema))],
  requester: ['requester', lazy(() => practicionerSchema)],
  diagnoses: ['diagnoses', array(string())],
  note: ['note', string()],
});
