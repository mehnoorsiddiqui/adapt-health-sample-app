/**
 * AdaptHealth Partner APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { HealthResponse, healthResponseSchema } from '../models/healthResponse';
import { number } from '../schema';
import { BaseController } from './baseController';

export class HealthController extends BaseController {
  /**
   * Can check the availability of this service and connected services
   *
   * @param depth Sets the depth of connected services to check for a health response. The default of 1 will
   *                        only check this service. 0 will check the health of all services descending from this one.
   *                        Any other positive number will be limited, for example 3 would check this service,
   *                        connected services and ask connected services to check the health of any connected services
   *                        to them.
   * @return Response from the API call
   */
  async getHealth(
    depth: number,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<HealthResponse>> {
    const req = this.createRequest('GET', '/health');
    const mapped = req.prepareArgs({ depth: [depth, number()] });
    req.query('depth', mapped.depth);
    return req.callAsJson(healthResponseSchema, requestOptions);
  }
}
